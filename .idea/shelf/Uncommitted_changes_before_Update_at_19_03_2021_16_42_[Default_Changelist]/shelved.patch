Index: app/src/main/java/level_page/gameplay/LevelView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package level_page.gameplay;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.content.Intent;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.graphics.Rect;\r\nimport android.view.SurfaceHolder;\r\nimport android.view.SurfaceView;\r\nimport android.view.View;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.example.mobechallengeproject.R;\r\n\r\nimport level_page.model.Balle;\r\n\r\nimport end_page.EndActivity;\r\nimport level_page.model.Chrono;\r\n\r\npublic class LevelView extends SurfaceView implements SurfaceHolder.Callback {\r\n    private final static int xDep = 60;\r\n    private final static int yDep = 600;\r\n\r\n    public static float luminosite;\r\n\r\n    public static LevelGamePlayActivity activity;\r\n\r\n    private static Balle balle = new Balle(20, xDep, yDep);\r\n\r\n    private LevelThread levelThread;\r\n\r\n    public static float[] gVector = new float[]{0, 0, 0};\r\n\r\n    public static int xMax;\r\n    public static int yMax;\r\n\r\n    private Bitmap map_clean;\r\n    private Bitmap map_high;\r\n    private Bitmap map_defonce;\r\n    private static Bitmap current_map;\r\n    private Bitmap bonus1;\r\n    private Bitmap bonus2;\r\n    private Bitmap malus;\r\n\r\n    private boolean bonus1actived = true;\r\n    private boolean bonus2actived = true;\r\n    private boolean malusactived = true;\r\n\r\n    public static boolean restart;\r\n\r\n    private boolean gameover = false;\r\n\r\n    private Etat etat;\r\n\r\n    public static LevelGamePlayActivity levelGamePlayActivity;\r\n\r\n    private Chrono chrono = new Chrono();\r\n    private Chrono chronometreGlobal = new Chrono();\r\n\r\n    private String textChrono;\r\n\r\n    public boolean demarre = false;\r\n\r\n    public LevelView(Context context) {\r\n        super(context);\r\n        getHolder().addCallback(this);\r\n        this.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE\r\n                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\r\n                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\r\n                | View.SYSTEM_UI_FLAG_FULLSCREEN\r\n                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);\r\n        map_clean = BitmapFactory.decodeResource(getResources(), R.drawable.map_state0);\r\n        map_high = BitmapFactory.decodeResource(getResources(), R.drawable.map_state1);\r\n        map_defonce = BitmapFactory.decodeResource(getResources(), R.drawable.map_state2);\r\n\r\n        current_map = map_clean.isMutable() ? map_clean : map_clean.copy(Bitmap.Config.ARGB_8888, true);\r\n\r\n        Bitmap seringue1 = BitmapFactory.decodeResource(getResources(), R.drawable.bonus1);\r\n        Bitmap seringue2 = BitmapFactory.decodeResource(getResources(), R.drawable.bonus2);\r\n        Bitmap joint = BitmapFactory.decodeResource(getResources(), R.drawable.malus);\r\n        bonus1 = seringue1.isMutable() ? seringue1 : seringue1.copy(Bitmap.Config.ARGB_8888, true);\r\n        bonus2 = seringue2.isMutable() ? seringue2 : seringue2.copy(Bitmap.Config.ARGB_8888, true);\r\n        malus = joint.isMutable() ? joint : joint.copy(Bitmap.Config.ARGB_8888, true);\r\n        this.levelThread = new LevelThread(getHolder(), this);\r\n        this.etat = Etat.CLEAN;\r\n        setFocusable(true);\r\n        chronometreGlobal.start();\r\n    }\r\n\r\n    public void update() {\r\n        float xVector = gVector[1];\r\n        float yVector = gVector[0];\r\n        double futurX = -1;\r\n        double futurY = -1;\r\n        switch (etat) {\r\n            case CLEAN:\r\n                futurX = balle.getCx() + xVector;\r\n                futurY = balle.getCy() + yVector;\r\n                break;\r\n            case HIGH:\r\n                futurX = balle.getCx() - xVector;\r\n                futurY = balle.getCy() - yVector;\r\n                break;\r\n            case DEFONCE:\r\n                futurX = balle.getCx() - xVector;\r\n                futurY = balle.getCy() + yVector;\r\n                break;\r\n        }\r\n\r\n        if(restart){\r\n            if(!demarre){\r\n                chrono.start();\r\n                demarre = true;\r\n            }\r\n        } else {\r\n            chrono.stop();\r\n            demarre = false;\r\n        }\r\n\r\n        if (futurX >= xMax - balle.getRadius() || futurX <= balle.getRadius()) {\r\n            futurX = balle.getCx();\r\n        }\r\n        if (futurY >= yMax - balle.getRadius() || futurY <= balle.getRadius()) {\r\n            futurY = balle.getCy();\r\n        }\r\n\r\n        if(isOnPixel((int) futurX, (int) futurY, Color.RED)){ //joint\r\n            malusactived = false;\r\n        }\r\n        if(isOnPixel((int) futurX, (int) futurY, Color.BLUE)){ //bonus1\r\n            bonus1actived = false;\r\n        }\r\n        if(isOnPixel((int) futurX, (int) futurY, Color.rgb(0, 0, 254))){ //bonus2\r\n            bonus2actived = false;\r\n        }\r\n        if(isOnPixel((int) futurX, (int) futurY, Color.GREEN)){ //arrivÃ©\r\n            end();\r\n        }\r\n        if (isOnPixel((int) futurX, (int) futurY, Color.BLACK)){ //mur\r\n            restartGame();\r\n        } else {\r\n            balle.setCx((int) futurX);\r\n            balle.setCy((int) futurY);\r\n        }\r\n\r\n\r\n\r\n        if(chronometreGlobal.getDuree() == 30) {\r\n            switch (etat) {\r\n                case CLEAN:\r\n                    etat = Etat.HIGH;\r\n                    current_map = map_high.isMutable() ? map_high : map_high.copy(Bitmap.Config.ARGB_8888, true);\r\n                    break;\r\n                case HIGH:\r\n                    etat = Etat.DEFONCE;\r\n                    current_map = map_defonce.isMutable() ? map_defonce : map_defonce.copy(Bitmap.Config.ARGB_8888, true);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static boolean isOnPixel(int futureX, int futureY, int color) {\r\n        int r = balle.getRadius();\r\n        int xi = futureX - balle.getRadius();\r\n        int yi = futureY - balle.getRadius();\r\n\r\n        while (yi < futureY + balle.getRadius()) {\r\n            while (xi < futureX + balle.getRadius()) {\r\n                if (xi >= xMax || xi <= 0 || yi >= yMax || yi <= 0) {\r\n                    return true;\r\n                }\r\n                if (isInCircle(xi, yi, futureX, futureY, r) && current_map.getPixel(xi * (current_map.getWidth()-1) / xMax, yi * (current_map.getHeight()-1) / yMax) == color) {\r\n                    return true;\r\n                }\r\n                xi = xi + 1;\r\n            }\r\n            xi = futureX - balle.getRadius();\r\n            yi = yi + 1;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private static boolean isInCircle(int x, int y, int cx, int cy, int r) {\r\n        return (x - cx)*(x - cx) + (y - cy)*(y - cy) <= r*r;\r\n    }\r\n\r\n    private void end(){\r\n        if(!gameover){\r\n            String score = String.valueOf(chronometreGlobal.getDuree());\r\n            chronometreGlobal.stop();\r\n            Intent intent = new Intent(levelGamePlayActivity, EndActivity.class);\r\n            intent.putExtra(\"SCORE\", score);\r\n            levelGamePlayActivity.startActivity(intent);\r\n            gameover = true;\r\n        }\r\n    }\r\n\r\n    public static void restartGame(){\r\n        balle.setCx(xDep);\r\n        balle.setCy(yDep);\r\n    }\r\n\r\n    @Override\r\n    public void draw(Canvas canvas){\r\n        if(canvas != null) {\r\n            super.draw(canvas);\r\n            Paint paint = new Paint();\r\n\r\n            canvas.drawBitmap(current_map, null, new Rect(0, 0, xMax, yMax), paint);\r\n            if(bonus1actived)\r\n                canvas.drawBitmap(bonus1, null, new Rect(1200, 720, 1250, 770), paint);\r\n            if(bonus2actived)\r\n                canvas.drawBitmap(bonus2, null, new Rect(40, 720, 90, 770), paint);\r\n            if(malusactived)\r\n                canvas.drawBitmap(malus, null, new Rect(1200, 230, 1250, 280), paint);\r\n            paint.setColor(getColorBall());\r\n            canvas.drawCircle(balle.getCx(), balle.getCy(), balle.getRadius(), paint);\r\n\r\n            drawRestart(canvas, paint);\r\n\r\n            Paint paintChrono = new Paint();\r\n            paintChrono.setTextSize(40);\r\n            paintChrono.setColor(Color.RED);\r\n            paintChrono.setFakeBoldText(true);\r\n            textChrono = \"Time : \" + String.valueOf(chronometreGlobal.getDuree());\r\n            canvas.drawText(textChrono, (int)((float)xMax*0.42), (int)((float)yMax*0.065), paintChrono);\r\n        }\r\n    }\r\n\r\n    private int getColorBall(){\r\n        int r = (int) (luminosite*30)%255;\r\n        int g = (int) (luminosite*60)%255;\r\n        int b = (int) (luminosite*90)%255;\r\n        return Color.rgb(r, g, b);\r\n    }\r\n\r\n    @Override\r\n    public void surfaceCreated(SurfaceHolder holder) {\r\n        levelThread.setRunning(true);\r\n        levelThread.start();\r\n    }\r\n\r\n    @Override\r\n    public void surfaceChanged(@NonNull SurfaceHolder holder, int format, int width, int height) { }\r\n\r\n    @Override\r\n    public void surfaceDestroyed(@NonNull SurfaceHolder holder) {\r\n        boolean retry = true;\r\n        while (retry) {\r\n            try {\r\n                levelThread.setRunning(false);\r\n                levelThread.join();\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n            retry = false;\r\n        }\r\n    }\r\n\r\n    private void drawRestart(Canvas canvas, Paint paint){\r\n        if(restart){\r\n            paint.setColor(Color.WHITE);\r\n            paint.setStyle(Paint.Style.STROKE);\r\n            paint.setStrokeWidth(2);\r\n            canvas.drawRect(50, 50, 300, 100, paint);\r\n            paint.setStyle(Paint.Style.FILL);\r\n            paint.setColor(Color.RED);\r\n            long test = chrono.getDuree();\r\n            if (test == 0) {\r\n                canvas.drawRect(50, 50, 100, 100, paint);\r\n            } else if(test == 1){\r\n                canvas.drawRect(50, 50, 200, 100, paint);\r\n            } else if(test == 2){\r\n                canvas.drawRect(50, 50, 300, 100, paint);\r\n            } else if(test == 3) { //restart\r\n                restartGame();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/level_page/gameplay/LevelView.java	(revision 3c255f2d2c5e52e0572ae251f786c59c86a5688a)
+++ app/src/main/java/level_page/gameplay/LevelView.java	(date 1616168078200)
@@ -65,6 +65,8 @@
 
     public boolean demarre = false;
 
+    private boolean timesUp = false;
+
     public LevelView(Context context) {
         super(context);
         getHolder().addCallback(this);
@@ -150,7 +152,7 @@
 
 
 
-        if(chronometreGlobal.getDuree() == 30) {
+        if(!timesUp && chronometreGlobal.getDuree() == 35) {
             switch (etat) {
                 case CLEAN:
                     etat = Etat.HIGH;
@@ -161,6 +163,7 @@
                     current_map = map_defonce.isMutable() ? map_defonce : map_defonce.copy(Bitmap.Config.ARGB_8888, true);
                     break;
             }
+            timesUp = true;
         }
     }
 
Index: app/src/main/java/level_page/gameplay/LevelGamePlayActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package level_page.gameplay;\r\n\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Point;\r\nimport android.hardware.Sensor;\r\nimport android.hardware.SensorEvent;\r\nimport android.hardware.SensorEventListener;\r\nimport android.hardware.SensorManager;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.view.Display;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\n\r\nimport com.example.mobechallengeproject.R;\r\n\r\npublic class LevelGamePlayActivity extends Activity implements SensorEventListener, View.OnTouchListener{\r\n    private SensorManager sensorManager;\r\n    private Sensor accelSensor;\r\n    private Sensor lightSensor;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n                WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        this.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        Point size = new Point();\r\n        display.getSize(size);\r\n\r\n        int width = size.x;\r\n        int height = size.y;\r\n\r\n        LevelView.yMax = height+80;\r\n        LevelView.xMax = width;\r\n\r\n        LevelView.activity = this;\r\n\r\n        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\r\n        accelSensor = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\r\n        lightSensor = sensorManager.getDefaultSensor(Sensor.TYPE_LIGHT);\r\n\r\n        LevelView.levelGamePlayActivity = this;\r\n        LevelView.restart = false;\r\n\r\n        LevelView levelView = new LevelView(this);\r\n        levelView.setOnTouchListener(this);\r\n        setContentView(levelView);\r\n\r\n        MediaPlayer music = MediaPlayer.create(LevelGamePlayActivity.this, R.raw.level_music);\r\n        music.start();\r\n    }\r\n\r\n    @Override\r\n    public void onSensorChanged(SensorEvent sensorEvent) {\r\n        switch (sensorEvent.sensor.getType()) {\r\n            case Sensor.TYPE_ACCELEROMETER:\r\n                LevelView.gVector = sensorEvent.values;\r\n                break;\r\n            case Sensor.TYPE_LIGHT:\r\n                LevelView.luminosite = sensorEvent.values[0];\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onAccuracyChanged(Sensor sensor, int accuracy) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onTouch(View v, MotionEvent event) {\r\n        int count = event.getPointerCount();\r\n        if (count == 2) {\r\n            LevelView.restart = true;\r\n        } else{\r\n            LevelView.restart = false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        sensorManager.registerListener(this, lightSensor, SensorManager.SENSOR_DELAY_NORMAL);\r\n        sensorManager.registerListener(this, accelSensor, SensorManager.SENSOR_DELAY_NORMAL);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/level_page/gameplay/LevelGamePlayActivity.java	(revision 3c255f2d2c5e52e0572ae251f786c59c86a5688a)
+++ app/src/main/java/level_page/gameplay/LevelGamePlayActivity.java	(date 1616168528221)
@@ -3,7 +3,6 @@
 
 import android.app.Activity;
 import android.content.Context;
-import android.content.Intent;
 import android.graphics.Point;
 import android.hardware.Sensor;
 import android.hardware.SensorEvent;
@@ -19,10 +18,13 @@
 
 import com.example.mobechallengeproject.R;
 
+import end_page.EndActivity;
+
 public class LevelGamePlayActivity extends Activity implements SensorEventListener, View.OnTouchListener{
     private SensorManager sensorManager;
     private Sensor accelSensor;
     private Sensor lightSensor;
+    public static MediaPlayer level_music;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -54,8 +56,8 @@
         levelView.setOnTouchListener(this);
         setContentView(levelView);
 
-        MediaPlayer music = MediaPlayer.create(LevelGamePlayActivity.this, R.raw.level_music);
-        music.start();
+        level_music = MediaPlayer.create(LevelGamePlayActivity.this, R.raw.level_music);
+        level_music.start();
     }
 
     @Override
Index: app/src/main/java/end_page/EndActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package end_page;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.mobechallengeproject.R;\r\n\r\nimport level_page.gameplay.LevelGamePlayActivity;\r\nimport level_page.gameplay.LevelView;\r\nimport start_page.StartActivity;\r\n\r\n\r\npublic class EndActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_end);\r\n\r\n        final TextView score = findViewById(R.id.score_text);\r\n        Intent intent = getIntent();\r\n        String score_intent = intent.getStringExtra(\"SCORE\");\r\n        score.setText(\"Votre score est : \" + score_intent);\r\n\r\n        final Button restart_button = findViewById(R.id.restart_button);\r\n        restart_button.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                LevelView.restartGame();\r\n                Intent intent = new Intent(EndActivity.this, LevelGamePlayActivity.class);\r\n                EndActivity.this.startActivity(intent);\r\n            }\r\n        });\r\n\r\n        final Button menu_button = findViewById(R.id.menu_button);\r\n        menu_button.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(EndActivity.this, StartActivity.class);\r\n                EndActivity.this.startActivity(intent);\r\n            }\r\n        });\r\n\r\n        final Button exit_button = findViewById(R.id.exit_button_end);\r\n        exit_button.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                finishAffinity();\r\n                System.exit(0);\r\n            }\r\n        });\r\n\r\n        MediaPlayer music = MediaPlayer.create(EndActivity.this, R.raw.end_music);\r\n        music.start();\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/end_page/EndActivity.java	(revision 3c255f2d2c5e52e0572ae251f786c59c86a5688a)
+++ app/src/main/java/end_page/EndActivity.java	(date 1616168078184)
@@ -17,6 +17,7 @@
 
 
 public class EndActivity extends AppCompatActivity {
+    public static MediaPlayer end_music;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -53,8 +54,9 @@
             }
         });
 
-        MediaPlayer music = MediaPlayer.create(EndActivity.this, R.raw.end_music);
-        music.start();
+        LevelGamePlayActivity.level_music.stop();
+        end_music = MediaPlayer.create(EndActivity.this, R.raw.end_music);
+        end_music.start();
 
     }
 }
\ No newline at end of file
